local hasfilesystem = false
if not hasfilesystem then
	local filecache = {}
	getgenv().writefile = function(path,data)
		filecache[path] = data
	end
	getgenv().readfile = function(path) 
		return filecache[path]
	end
end
local env = loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source') .. "\nreturn getfenv()")()
local notify,addcmd,execCmd,addcmdtext,getstring,getRoot = env.notify,env.addcmd,env.execCmd,env.addcmdtext,env.getstring,env.getRoot
local CMDs = {}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'retroteleport', DESC = 'Teleports to a retro place via id.'}
CMDs[#CMDs + 1] = {NAME = 'retroreturn / return', DESC = 'Teleports to retro menu.'}
CMDs[#CMDs + 1] = {NAME = 'retrorejoin', DESC = 'Rejoins you to the same retro place.'}
CMDs[#CMDs + 1] = {NAME = 'retroplaceid', DESC = 'Notifies retro place id.'}
--CMDs[#CMDs + 1] = {NAME = 'retrobanbypass', DESC = 'Bypasses a retrostudio ban (only if the ui does not load on join)'} patched
CMDs[#CMDs + 1] = {NAME = 'grabbloxycola', DESC = 'Grabs the specified amount of bloxy colas.'}
CMDs[#CMDs + 1] = {NAME = 'autodropbloxycola', DESC = 'Automatically drops bloxy colas.'}
CMDs[#CMDs + 1] = {NAME = 'cloneparts', DESC = 'Clones all unlocked parts in the workspace. Need a clone tool (From Toolbox or Btools Command)'}
CMDs[#CMDs + 1] = {NAME = 'destroyparts', DESC = 'Destroys all unlocked parts in the workspace. Need a destroy tool (From Toolbox or Btools Command)'}
CMDs[#CMDs + 1] = {NAME = 'explode', DESC = 'Explodes everyone continuously (causes fps lag) (requires admin)'}
CMDs[#CMDs + 1] = {NAME = 'adminesp', DESC = 'ESP for retrostudio admins'}
CMDs[#CMDs + 1] = {NAME = 'unadminesp', DESC = 'Disables adminesp'}
CMDs[#CMDs + 1] = {NAME = 'retrospam', DESC = 'Spam in the retrostudio chat.'}
CMDs[#CMDs + 1] = {NAME = 'unretrospam', DESC = 'Disables retrospam'}
CMDs[#CMDs + 1] = {NAME = 'welcomebot', DESC = 'Welcomes anyone who joins.'}
CMDs[#CMDs + 1] = {NAME = 'unretrospam', DESC = 'Disables welcomebot'}
CMDs[#CMDs + 1] = {NAME = 'spamcountdown', DESC = 'Spams the :countdown command.'}
CMDs[#CMDs + 1] = {NAME = 'antiretroadmin', DESC = 'Automatically kicks you when a retrostudio admin joins.'}
CMDs[#CMDs + 1] = {NAME = 'unantiretroadmin', DESC = 'Disables antiretroadmin'}
CMDs[#CMDs + 1] = {NAME = 'autoreconnect', DESC = 'Automatically reconnect to a retrostudio game.'}
CMDs[#CMDs + 1] = {NAME = 'zombie', DESC = 'Automatically makes you follow people. Use command to toggle.'}
CMDs[#CMDs + 1] = {NAME = 'saxspam', DESC = 'Automatically spams your saxophone to lag the server and other clients.'}
CMDs[#CMDs + 1] = {NAME = 'density / den', DESC = 'Locally sets your characters density.'}
CMDs[#CMDs + 1] = {NAME = 'vehiclespeed / vspeed / vs', DESC = 'Sets your vehicle speed.'}
CMDs[#CMDs + 1] = {NAME = 'nokillbrick / nokill / nkb / nk', DESC = 'Makes it so kill bricks cannot kill you.'}
CMDs[#CMDs + 1] = {NAME = 'nohatmesh / deletehatmesh / nhm / dhm', DESC = 'Deletes the mesh inside your hats.'}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
IYMouse = Player:GetMouse()
local PlayerGui = Player.PlayerGui
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

for i,v in pairs(CMDs) do
	addcmdtext(v.NAME,"Retro",v.DESC)
end

function getretroplace()
	if game.PlaceId == 5846386835 then
		return 0
	end
	if game.PlaceId == 5867227007 then
		return 1
	end
	if game.PlaceId == 5846387555 then
		return 2
	end
end
function teleporttoplaceviamenu(id)
	local remote = ReplicatedStorage.RemoteEvents.RequestPlayerTeleport
	remote:FireServer(id)
end

local teleportdata = TeleportService:GetLocalPlayerTeleportData()
if teleportdata and typeof(teleportdata) == "table" and teleportdata.PlaceId and getretroplace() == 0 then
	teleporttoplaceviamenu(teleportdata.PlaceId)
end
function notifyretroadmin(p)
	notify("notification",p.Name .." is a retro admin")
end
function notifytrialadmin(p)
	notify("notification",p.Name .." is a trial admin")
end
function notifyadmin(p)
	notify("notification",p.Name .." is a game admin")
end
function notifydeveloper(p)
	notify("notification",p.Name .." is a game developer")
end
function returnhome()
	TeleportService:Teleport(5846386835,Players.LocalPlayer)
end
function teleporttoplace(id)
	TeleportService:Teleport(5846386835,Players.LocalPlayer,{PlaceId=id})
end
function getretroplaceid()
	return ReplicatedStorage.GameInfo.GameId.Value
end
function getretroplacename()
	return ReplicatedStorage.GameInfo.GameName.Value
end
function isplayerowner(p)
	if p.UserId == ReplicatedStorage.GameInfo.GameOwnerId.Value or ReplicatedStorage.GameInfo.GameOwnerId:FindFirstChild(tostring(p.UserId)) then
		return true
	end
	return false
end
function isplayertrialadmin(p)
	local rank = p:GetRankInGroup(5264310)
	if rank >= 224 then
		return true
	end
	return false
end
function isplayeradmin(p)
	local rank = p:GetRankInGroup(5264310)
	if rank >= 225 then
		return true
	end
	return false
end
function isplayerdeveloper(p)
	local rank = p:GetRankInGroup(5264310)
	if rank >= 253 then
		return true
	end
	return false
end
function getadmintype(p)
	local ipo = isplayerowner(p)
	local ipta = isplayertrialadmin(p)
	local ipa = isplayeradmin(p)
	local ipd = isplayerdeveloper(p)
	local rank = 0
	if ipo then
		rank = 1
	end
	if ipta then
		rank = 2
	end
	if ipa then
		rank = 3
	end
	if ipd then
		rank = 4
	end
	return rank
end

pcall(function()
	if getretroplace() == 1 then
		local function onplayeraddednotify(p)
			local playerrank = getadmintype(p)
			if playerrank >= 4 then
				notifydeveloper(p)
			elseif playerrank >= 3 then
				notifyretroadmin(p)
			elseif playerrank >= 2 then
				notifytrialadmin(p)
			elseif playerrank >= 1 then
				notifyadmin(p)
			end
		end
		for i,v in pairs(Players:GetPlayers()) do
			onplayeraddednotify(v)
		end
		Players.PlayerAdded:Connect(onplayeraddednotify)
	end
end)


addcmd("retroteleport",{},function(args,speaker)
	local placeid = args[1]
	if typeof(placeid) == "string" then
		notify("Teleporting","Teleporting you to ".. placeid .. " via the menu.")
		teleporttoplace(placeid)
	end
end)
addcmd("retroreturn",{"return"},function(args,speaker)
	returnhome()
end)
addcmd("retroplaceid",{},function(args,speaker)
	notify("Retro place id",tostring(getretroplaceid()))
end)
addcmd("retrorejoin",{},function(args,speaker)
	if getretroplace() == 1 then
		notify("Rejoining","Rejoining via the menu.")
		teleporttoplace(getretroplaceid())
	end
end)
--[[addcmd("retrobanbypass",{},function(args,speaker)
	notify("Notification","Bypassing retro studio ban...")
	for i,v in pairs(StarterGui:GetChildren()) do
		v:Clone().Parent = PlayerGui
	end
end)]]
function findvendingmachine()
	for i,v in pairs(workspace:GetDescendants()) do
		if v.ClassName == "Model" then
			local clickdetector = v:FindFirstChild("ClickDetector")
			local handlerscript = v:FindFirstChild("BloxyColaVendor")
			if clickdetector and handlerscript and clickdetector.ClassName == "ClickDetector" and handlerscript.ClassName == "Script" then
				return v,clickdetector
			end
		end
	end
end
function grabcola(n,grabdelay)
	local vendingmachine,clickdetector = findvendingmachine()
	if clickdetector then
		for i = 1,n do
			if grabdelay then
				wait(grabdelay)
			end
			spawn(function()
				fireclickdetector(clickdetector)
			end)
		end
		return true
	end
	return false
end
local toomuch = false
addcmd("grabbloxycola",{"bloxycola"},function(args,speaker)
	if getretroplace() == 1 then
		local number = math.clamp(math.floor(tonumber(args[1]) or 1),1,math.huge)
		local grabdelay = tonumber(args[2])
		if number > 1000 and not toomuch then
			toomuch = true
			notify("Warning","Grabbing more than 1000 bloxy colas may disconnect you from the game. Use this command again to proceed.")
		else

			local notification1 = "Grabing "
			local notification2 = " bloxy cola"
			if number > 1 then
				notification2 = notification2 .. "s"
			end
			local notification3 = notification1 .. tostring(number) .. notification2
			notify("Notification",notification3)
			if not grabcola(number,grabdelay) then
				notify("Error","No vending machine found.")
			end
		end
	end
end)
addcmd("autodropbloxycola",{"autobloxycola"},function(args,speaker)
	if getretroplace() == 1 then
		local Player = Players.LocalPlayer
		local function ongearadded(gear)
			spawn(function()
				if gear.Name == "BloxyCola" and gear:IsA("Tool") and gear.CanBeDropped then
					if Player.Character then
						wait(0.05)
						gear.Parent = Player.Character
						wait(0.05)
						gear.Parent = workspace
					end
				end
			end)
		end
		for i,v in pairs(Player.Backpack:GetChildren()) do
			ongearadded(v)
		end
		Player.Backpack.ChildAdded:Connect(function(gear)
			ongearadded(gear)
		end)
	end
end)
function clone(r1,r2,clonetype,p)
	spawn(function()
		if p:IsA("BasePart") and p.Locked == false then
			if clonetype == 1 and p.Anchored == true then
				return
			end
			if clonetype == 2 and p.Anchored == false then
				return
			end
			r1:InvokeServer(p)
			r2:FireServer()
		end
	end)
end
addcmd("cloneparts",{},function(args,speaker)
	if getretroplace() == 1 then
		local clonetype = tonumber(args[1]) or 0
		clonetype = math.clamp(math.floor(clonetype),0,2)
		local tool = nil
		local Player = Players.LocalPlayer
		local char = Player.Character
		local backpack = Player.Backpack
		if char then
			tool = char:FindFirstChild("Clone") or char:FindFirstChild("CloneTool")
		end
		if not tool then
			tool = backpack:FindFirstChild("Clone") or backpack:FindFirstChild("CloneTool")
		end
		if tool then
			local r1 = tool.MouseDown
			local r2 = tool.MouseUp
			if clonetype == 0 then
				notify("Notification","Cloning parts.")
			end
			if clonetype == 1 then
				notify("Notification","Cloning unanchored parts.")
			end
			if clonetype == 2 then
				notify("Notification","Cloning anchored parts.")
			end
			for i,v in pairs(game:GetDescendants()) do
				clone(r1,r2,clonetype,v)
			end
		else
			notify("Error","No clone tool found.")
		end
	end
end)
function destroy(r,p)
	spawn(function()
		if r and p and p:IsA("BasePart") and not p.Locked then
			r:FireServer(p)
		end
	end)
end
addcmd("destroyparts",{},function(args)
	if getretroplace() == 1 then
		local tool = nil
		local Player = Players.LocalPlayer
		local char = Player.Character
		local backpack = Player.Backpack
		if char then
			tool = char:FindFirstChild("Delete") or char:FindFirstChild("Hammer")
		end
		if not tool then
			tool = backpack:FindFirstChild("Delete") or backpack:FindFirstChild("Hammer")
		end
		if tool then
			local r = tool.MouseDown
			notify("Notification","Destroying parts.")
			for i,v in pairs(game:GetDescendants()) do
				destroy(r,v)
			end
		else
			notify("Error","No destroy tool found.")
		end
	end
end)
local chatbridge = nil
if getretroplace() == 1 then
	chatbridge = require(ReplicatedStorage.ChatBridge)
end
local ogchatfunc = nil
function onattemptedchatmessage(msg)
	if msg == "test_youcantchat_this" then
		generatesystemmessage("Hello World")
		return false
	end
	return true
end
if getretroplace() == 1 then
	ogchatfunc = chatbridge.chat--[[hookfunction(chatbridge.chat,function(_,msg,...)
		if onattemptedchatmessage(msg) then
			return ogchatfunc(_,msg,...)
		else
			return ogchatfunc(_,"",...)
		end
	end)]]
end
function chatmessage(msg)
	if getretroplace() == 1 then
		ogchatfunc(chatbridge,msg)
		--[[local chatbridge = require(ReplicatedStorage.ChatBridge)
		chatbridge:chat(msg)]]
	end
end
function generatesystemmessage(msg)
	if getretroplace() == 1 then
		local robloxgui = PlayerGui:WaitForChild("RobloxGui")
		local modules = robloxgui:WaitForChild("Modules")
		local chatmodule = require(modules:WaitForChild("Chat"))
		local variable = debug.getupvalue(chatmodule.FocusChatBar, 1)
		local widget = variable.ChatWindowWidget
		widget:AddSystemChatMessage(msg)
	end
end
local chatevents = nil
if getretroplace() == 1 then
	chatevents = ReplicatedStorage.ClassicChatSystemChatEvents
end
function onmessagesent(p,msg)

end
if getretroplace() == 1 then
	chatevents.PlayerChatted.OnClientEvent:Connect(function(chattype,plrchat,msg)
		if chattype == Enum.PlayerChatType.All then
			onmessagesent(plrchat,msg)
		end
	end)
end

function getparent()
	local parent = PlayerGui
	pcall(function()
		local cg = game:GetService("CoreGui")
		cg:WaitForChild("RobloxGui")
		parent = cg
	end)
	return parent
end
function destroyline(got)
	if typeof(got) == "userdata" then
		got.Stop = true
	else
		error("Expected ':' not '.' calling member function Destroy")
	end
end
function makeline()
	local sg = Instance.new("ScreenGui")
	local fr = Instance.new("Frame")
	sg.ResetOnSpawn = false
	sg.IgnoreGuiInset = true
	sg.DisplayOrder = 5
	sg.Name = HttpService:GenerateGUID(false)
	fr.Name = HttpService:GenerateGUID(false)
	fr.BorderSizePixel = 0
	fr.AnchorPoint = Vector2.new(0.5,0.5)
	fr.Parent = sg
	sg.Parent = getparent()
	local properties = {
		Name = "Line",
		Thickness = 1,
		Transparency = 0,
		Color = Color3.new(1,0,0),
		From = Vector2.new(0,0),
		To = Vector2.new(0,0),
		Visible = true,
		Stop = false,
		Destroy = destroyline,
	}
	local lockproperties = {
		["Destroy"] = true,
	}
	local Destroyed = false
	local function update()
		if Destroyed then
			return
		end
		local topos = properties.To
		local halffrompos = properties.From
		local averageposition = Vector2.new((halffrompos.X+topos.X)/2,(halffrompos.Y+topos.Y)/2)
		local sub = halffrompos-topos
		local dis = sub.Magnitude
		fr.Position = UDim2.new(0,averageposition.X,0,averageposition.Y)
		fr.Size = UDim2.new(0,dis,0,properties.Thickness)
		local ypercent = math.deg(math.atan(sub.Y/sub.X))
		fr.Rotation = ypercent
		fr.BackgroundColor3 = properties.Color
		fr.Transparency = properties.Transparency
		fr.Visible = properties.Visible
		if properties.Stop then
			Destroyed = true
			fr:Destroy()
			sg:Destroy()
			sg = nil
			fr = nil
		end
	end
	local userdata = newproxy(true)
	local metatable = getmetatable(userdata)

	update()

	metatable.__index = function(_,p)
		local got = properties[p]
		if got == nil then
			error(p .. " is not a valid member of Line \"" .. properties.Name .. "\"")
		end
		return got
	end
	metatable.__newindex = function(_,p,v)
		local got = properties[p]
		if got == nil then
			error(p .. " is not a valid member of Line \"" .. properties.Name .. "\"")
		end
		if lockproperties[p] then
			error("Unabled to assign property ".. p .. ". Property is read only")
		end
		if typeof(got) ~= typeof(v) then
			error("Unable to assign property ".. p .. ". ".. typeof(got) .." expected, got ".. typeof(v))
		end
		properties[p] = v
		update()
	end
	metatable.__metatable = "The metatable is locked"
	return userdata
end

function esptopart(part,color)
	local line = makeline()
	line.Color = color
	local connection = nil
	local stopfunc = function()
		connection:Disconnect()
		line:Destroy()
	end
	connection = RunService.RenderStepped:Connect(function()
		local camera = workspace.CurrentCamera
		local mouse = IYMouse
		if not part then
			stopfunc()
			return
		end
		local point,visible = camera:WorldToViewportPoint(part.Position)
		if visible and part:IsDescendantOf(workspace) then
			line.Visible = true
			--local mid = Vector2.new(camera.ViewportSize.X/2,camera.ViewportSize.Y/2)
			local mid = Vector2.new(mouse.X,mouse.Y+36)
			local pointfix = Vector2.new(point.X,point.Y)
			line.From = mid
			line.To = pointfix
		else
			line.Visible = false
		end
	end)

	return stopfunc
end
local adminespenabled = false
local adminespdata = {}
local adminespcolor = {
	[0] = Color3.new(1, 1, 1),
	[1] = Color3.new(1, 0.666667, 1),
	[2] = Color3.new(0.666667, 0, 1),
	[3] = Color3.new(1, 0, 0),
	[4] = Color3.new(1, 0.666667, 0),
}

function giveplayertracers(p,color)
	local character = p.Character or p.CharacterAdded:Wait()
	local stopcurrent = nil
	local function charadded(char)
		stopcurrent = esptopart(char:WaitForChild("Head"),color)
	end
	charadded(character)
	local connection = nil
	local function stopit()
		connection:Disconnect()
		if stopcurrent then
			stopcurrent()
		end
	end
	connection = p.CharacterAdded:Connect(charadded)
	return stopit
end

addcmd("adminesp",{},function(args)
	if getretroplace() == 1 then
		adminespenabled = true
		while adminespenabled do
			for i,v in pairs(adminespdata) do
				local ins = Players:GetPlayerByUserId(i)
				if not ins then
					v()
					adminespdata[i] = nil
				elseif getadmintype(ins) < 1 then
					v()
					adminespdata[i] = nil
				end
			end
			for i,v in pairs(Players:GetPlayers()) do
				local gotadmintype = getadmintype(v)
				if v ~= Players.LocalPlayer and not adminespdata[v.UserId] and gotadmintype > 0 then
					adminespdata[v.UserId] = giveplayertracers(v,adminespcolor[gotadmintype])
				end
			end
			wait()
		end
	end
end)
addcmd("unadminesp",{},function(args)
	if getretroplace() == 1 then
		adminespenabled = false
		for i,v in pairs(adminespdata) do
			adminespdata[i] = nil
			v()
		end
	end
end)
local sc = 0
addcmd("retrospam",{},function(args)
	if getretroplace() == 1 then
		local str = getstring(2)
		local cooldown = tonumber(args[1])
		local lsc = sc
		if #str > 0 and cooldown then
			while wait(cooldown) and lsc >= sc do
				chatmessage(str)
			end
		end
	end
end)
addcmd("unretrospam",{},function(args)
	if getretroplace() == 1 then
		sc+=1
	end
end)
local wb = false
local wc = nil
addcmd("welcomebot",{},function(args)
	if getretroplace() == 1 and not wb then
		wb = true
		wc = Players.PlayerAdded:Connect(function(p)
			if p ~= Players.LocalPlayer then
				local rng = math.random()
				if rng >= 2/3 then
					chatmessage("Welcome ".. p.Name .. ", to ".. getretroplacename())
				elseif rng >= 1/3 then
					chatmessage("Hello ".. p.Name .. ", welcome to ".. getretroplacename())
				else
					chatmessage("Greetings ".. p.Name .. ", welcome to ".. getretroplacename())
				end
			end
		end)
	end
end)
addcmd("unwelcomebot",{},function(args)
	if getretroplace() == 1 and wb then
		wb = false
		wc:Disconnect()
	end
end)
addcmd("explode",{},function(args)
	if getretroplace() == 1 then
		notify("Notification","Loop Exploding")
		local mode = tonumber(args[1]) or 0
		mode = math.round(mode)
		mode = math.clamp(mode,0,1)
		local function getcmdbarremote()
			local cmdbar = nil
			local success,errormsg = pcall(function()
				cmdbar = PlayerGui.CMDBAR.TextBox.CMDBARSCRIPT.CMDBARREMOTE
			end)
			if success then
				return cmdbar
			end
		end
		local function executecommand(command)
			local commandfireremote = getcmdbarremote()
			if commandfireremote and getretroplace() == 1 then
				spawn(function()
					commandfireremote:FireServer(command)
				end)
				return true
			else
				return false
			end
		end
		--[[wait(1)
		chatmessage("!givemekohls")]]
		wait(1)
		chatmessage(":cmdbar")
		wait(1)
		if getcmdbarremote() and mode == 1 then
			executecommand(":music 3177712713")
		end
		while getcmdbarremote() and wait() do
			executecommand(":jail all")
			executecommand(":freeze all")
			executecommand(":ff all")
			executecommand(":explode all")
			if mode == 1 then
				executecommand(":countdown 100")
			end
		end
	end
end)
addcmd("spamcountdown",{},function(args)
	if getretroplace() == 1 then
		notify("Notification","Spaming countdowns")
		local function getcmdbarremote()
			local cmdbar = nil
			local success,errormsg = pcall(function()
				cmdbar = PlayerGui.CMDBAR.TextBox.CMDBARSCRIPT.CMDBARREMOTE
			end)
			if success then
				return cmdbar
			end
		end
		local function executecommand(command)
			local commandfireremote = getcmdbarremote()
			if commandfireremote and getretroplace() == 1 then
				spawn(function()
					commandfireremote:FireServer(command)
				end)
				return true
			else
				return false
			end
		end
		--[[wait(1)
		chatmessage("!givemekohls")]]
		wait(1)
		chatmessage(":cmdbar")
		wait(1)
		while getcmdbarremote() and wait() do
			for i = 1,5 do
				executecommand(":countdown 100")
			end
		end
	end
end)
local ara = false
local connection = nil
addcmd("antiretroadmin",{},function(args)
	if getretroplace() == 1 and not ara then
		ara = true
		notify("Notification","Anti Retro Admin Activated")
		local function plradded(p)
			if isplayeradmin(p) then
				Players.LocalPlayer:Kick("An admin joined.")
			end
		end
		for i,v in pairs(Players:GetPlayers()) do
			plradded(v)
		end
		connection = Players.PlayerAdded:Connect(plradded)
	end
end)
addcmd("unantiretroadmin",{},function(args)
	if getretroplace() == 1 and ara then
		ara = false
		notify("Notification","Anti Retro Admin Disabled")
		connection:Disconnect()
		connection = nil
	end
end)
function tp(id)
	queueteleport("getgenv().autoteleport = \"".. id .. "\"")
	if getretroplace() == 1 then
		TeleportService:Teleport(game.PlaceId,Players.LocalPlayer)
	else
		teleporttoplaceviamenu(id)
	end
end
addcmd("autoreconnect",{},function(args)
	if getretroplace() == 1 then
		local id = getretroplaceid()
		tp(id)
	end
end)
local zom = false
local sax = false
local removenotesbool = false
addcmd("zombie",{},function(args)
	zom = not zom
	if getretroplace() == 1 then
		while zom do
			local closest = {nil,256}
			local plr = Players.LocalPlayer
			local char = plr.Character
			local root = getRoot(char)
			local hum = nil
			if char then
				hum = char:FindFirstChildOfClass("Humanoid")
			end
			for i,vplr in pairs(Players:GetPlayers()) do
				local v = vplr.Character
				if v and v:IsA("Model") and v:FindFirstChildOfClass("Humanoid") and getRoot(v) and root and hum.Health > 0 and v ~= char then
					local vhum = v:FindFirstChildOfClass("Humanoid")
					local vroot = getRoot(v)
					local dis = (root.Position-vroot.Position).Magnitude
					if dis < closest[2] and vhum.Health > 0 then
						closest[1] = vroot
						closest[2] = dis
					end
				end
			end
			--[[for i,v in pairs(Players:GetPlayers()) do
				local vchar = v.Character
				if vchar and char then
					local vroot = getRoot(vchar)
					if root and vroot and v ~= plr then
						local vhum = vchar:FindFirstChildOfClass("Humanoid")
						if hum and vhum and hum.Health > 0 and vhum.Health > 0 then
							local dis = (root.Position-vroot.Position).Magnitude
							if dis < closest[2] then
								closest[1] = vroot.Position
								closest[2] = dis
							end
						end
					end
				end
			end]]
			if hum and closest[1] then
				hum:MoveTo(closest[1].Position)
			end
			wait()
		end
	end
end)
function isnote(p)
	if p.Name == "Part" and p.ClassName == "Part" and p:WaitForChild("chord") and p:WaitForChild("Note") and p:WaitForChild("RocketScript") then
		if p.BrickColor == BrickColor.new(24) and p.Locked and not p.CanCollide then
			return true
		end
	end
	return false
end
function removenotes()
	if not removenotesbool then
		removenotesbool = true
		notify("Notification","Note rendering has been disabled.")
		workspace.ChildAdded:Connect(function(p)
			if isnote(p) then
				p:Destroy()
			end
		end)
	end
end
function gettool(c,n)
	for i,v in pairs(c:GetChildren()) do
		if v:IsA("Tool") and v.Name == n then
			return v
		end
	end
end
local pdat = {}
function bprint(...)
	table.insert(pdat,{...})
end
addcmd("saxspam",{"sax"},function(args)
	if getretroplace() == 1 then
		local spd = tonumber(args[1])
		spd = spd or 1
		spd = math.round(spd)
		removenotes()
		sax = not sax
		while sax do
			local plr = Players.LocalPlayer
			local char = plr.Character
			if char then
				local tool = gettool(char,"30393653") or gettool(char,"Saxophone")
				if tool then
					for i = 1,spd do
						tool:Activate()
					end
				end
			end
			wait()
		end
	end
end)
addcmd("density",{"den"},function(args)
	local amt = args[1]
	if amt then
		amt = math.clamp(amt,0.01,100)
		pcall(function()
			local plr = Players.LocalPlayer
			local char = plr.Character
			local root = getRoot(char)
			local oldpp = root.CustomPhysicalProperties
			root.CustomPhysicalProperties = PhysicalProperties.new(amt,oldpp.Friction,oldpp.Elasticity,oldpp.FrictionWeight,oldpp.ElasticityWeight)
		end)
	end
end)
addcmd("vehiclespeed",{"vspeed","vs"},function(args)
	local amt = args[1]
	if tonumber(amt) then
		amt = math.max(0,amt)
		pcall(function()
			local plr = Players.LocalPlayer
			local char = plr.Character
			local root = getRoot(char)
			local hum = char:FindFirstChildOfClass("Humanoid")
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("VehicleSeat") and v.Occupant == hum then
					v.MaxSpeed = amt
				end
			end
		end)
	end
end)
addcmd("nohatmesh",{"nhm","deletehatmesh","dhm"},function(args)
	local plr = Players.LocalPlayer
	local char = plr.Character
	notify("Notification","Removing meshes from your hats.")
	for i,v in pairs(char:GetChildren()) do
		if v.ClassName == "Hat" or v.ClassName == "Accessory" or v.ClassName == "Accoutrement" then
			if v:FindFirstChild("Handle") then
				local mesh = v.Handle:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh:Destroy()
				end
			end
		end
	end
end)
function iskillpart(p)
	if p:IsA("BasePart") and p:FindFirstChildOfClass("Script") then
		for i,v in pairs(p:GetChildren()) do
			if v.ClassName == "Script" and v:GetAttribute("IsReferenceModel") == "TeamKillBrickScript" then
				return true
			end
			if v.ClassName == "Script" and v:GetAttribute("IsReferenceModel") == "AdminDoorScript" then
				return true
			end
		end
	end
	if p:IsA("BasePart") and p.Parent:IsA("Model") and p.Parent:FindFirstChildOfClass("Humanoid") and p.Parent:FindFirstChild("NPCScript") then
		return true
	end
	return false
end
function onPartAdded(p)
	if iskillpart(p) then
		p.CanTouch = false
	end
end
local nokillbrick = false
addcmd("nokillbrick",{"nokill","nkb","nk"},function(args)
	if not nokillbrick then
		nokillbrick = true
		for i,v in pairs(workspace:GetDescendants()) do
			onPartAdded(v)
		end
		workspace.DescendantAdded:Connect(onPartAdded)
	end
end)
RunService.RenderStepped:Connect(function()
	local ndat = table.clone(pdat)
	table.clear(pdat)
	for i,v in pairs(ndat) do
		print(table.unpack(v))
	end
end)
spawn(function()
	repeat wait() until getgenv().autoteleport
	local id = getgenv().autoteleport
	tp(id)
end)
